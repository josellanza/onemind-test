[{"/home/jose/pruebas-tecnicas/onemind-test/src/index.js":"1","/home/jose/pruebas-tecnicas/onemind-test/src/App.js":"2","/home/jose/pruebas-tecnicas/onemind-test/src/reportWebVitals.js":"3","/home/jose/pruebas-tecnicas/onemind-test/src/home/home.container.js":"4","/home/jose/pruebas-tecnicas/onemind-test/src/home/home.view.js":"5","/home/jose/pruebas-tecnicas/onemind-test/src/home/card/card.view.js":"6","/home/jose/pruebas-tecnicas/onemind-test/src/home/card/card.container.js":"7"},{"size":500,"mtime":1619106591642,"results":"8","hashOfConfig":"9"},{"size":174,"mtime":1619090610316,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1619088322517,"results":"11","hashOfConfig":"9"},{"size":908,"mtime":1619178316416,"results":"12","hashOfConfig":"9"},{"size":321,"mtime":1619178175423,"results":"13","hashOfConfig":"9"},{"size":957,"mtime":1619176535621,"results":"14","hashOfConfig":"9"},{"size":1133,"mtime":1619177924618,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"y93cwn",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},"/home/jose/pruebas-tecnicas/onemind-test/src/index.js",[],["32","33"],"/home/jose/pruebas-tecnicas/onemind-test/src/App.js",[],"/home/jose/pruebas-tecnicas/onemind-test/src/reportWebVitals.js",[],"/home/jose/pruebas-tecnicas/onemind-test/src/home/home.container.js",[],"/home/jose/pruebas-tecnicas/onemind-test/src/home/home.view.js",[],"/home/jose/pruebas-tecnicas/onemind-test/src/home/card/card.view.js",[],"/home/jose/pruebas-tecnicas/onemind-test/src/home/card/card.container.js",["34","35"],"import CardView from \"./card.view\";\nimport { useState, useEffect } from \"react\";\n\nconst Card = ({ data, animal }) => {\n\n  const [showMore, setShowMore] = useState(false);\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    if (data) {\n      setUsers(data);\n    }\n  }, []);\n\n  let usersFiltered = [];\n\n  const filterByAnimal = (users, animal) => {\n    users.map(user => {\n      if (user.animals.includes(animal) && user.isActive) {\n        usersFiltered.push(user);\n      }\n    });\n  }\n\n  const showMoreClick = () => setShowMore(!showMore);\n\n  const removeUser = (index) => {\n    usersFiltered.splice(index, 1);\n    setUsers(usersFiltered);\n  };\n\n  const sortByPoints = (users) => users.sort((a, b) => (a.points > b.points) ? -1 : 1);\n\n  const buildUsers = (users) => {\n    filterByAnimal(users, animal);\n    sortByPoints(users);\n  }\n\n  if (users.length && animal) {\n    buildUsers(users);\n  }\n  \n  return usersFiltered.length && \n    <CardView \n      users={usersFiltered} \n      animal={animal}\n      showMore={showMore}\n      removeUser={removeUser}\n      showMoreClick={showMoreClick}\n    />\n}\n\nexport default Card;",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":13,"column":6,"nodeType":"42","endLine":13,"endColumn":8,"suggestions":"43"},{"ruleId":"44","severity":1,"message":"45","line":18,"column":20,"nodeType":"46","messageId":"47","endLine":18,"endColumn":22},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array. If 'setUsers' needs the current value of 'data', you can also switch to useReducer instead of useState and read 'data' in the reducer.","ArrayExpression",["50"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [data]",{"range":"53","text":"54"},[283,285],"[data]"]