{"ast":null,"code":"var _jsxFileName = \"/home/jose/pruebas-tecnicas/onemind-test/src/home/home.container.js\",\n    _s = $RefreshSig$();\n\nimport HomeView from \"./home.view\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const response = require('../users.json'); //I tried httpsRequest but I got restricted by COrs policy.\n\n\n  const [data, setData] = useState([]);\n  const [animalsList, setAnimalsList] = useState([]);\n\n  if (response.length && !data.length) {\n    setdata(response);\n  }\n\n  const buildAnimals = data => {\n    const buildAnimalsLength = getData(data);\n    const lengths = buildAnimalsLength.map(a => a.length);\n    setAnimalsList(getAllAnimals(data, lengths));\n  };\n\n  const getData = data => data.map(user => user.animals);\n\n  const getAllAnimals = (data, lengths) => data[lengths.indexOf(Math.max(...lengths))].animals;\n\n  if (!animalsList.length && data.length) {\n    buildAnimals(data);\n  }\n\n  return animalsList.length && data ? /*#__PURE__*/_jsxDEV(HomeView, {\n    animalsList: animalsList,\n    users: users\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 39\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 94\n  }, this);\n};\n\n_s(Home, \"gc3NSq1Vzcl0Vayf5PROt7ekABw=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/jose/pruebas-tecnicas/onemind-test/src/home/home.container.js"],"names":["HomeView","React","useState","Home","response","require","data","setData","animalsList","setAnimalsList","length","setdata","buildAnimals","buildAnimalsLength","getData","lengths","map","a","getAllAnimals","user","animals","indexOf","Math","max","users"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,aAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMC,QAAQ,GAAGC,OAAO,CAAC,eAAD,CAAxB,CADiB,CAC0B;;;AAC3C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;;AAEA,MAAIE,QAAQ,CAACM,MAAT,IAAmB,CAACJ,IAAI,CAACI,MAA7B,EAAqC;AACnCC,IAAAA,OAAO,CAACP,QAAD,CAAP;AACD;;AAED,QAAMQ,YAAY,GAAIN,IAAD,IAAU;AAC7B,UAAMO,kBAAkB,GAAGC,OAAO,CAACR,IAAD,CAAlC;AACA,UAAMS,OAAO,GAAGF,kBAAkB,CAACG,GAAnB,CAAuBC,CAAC,IAAIA,CAAC,CAACP,MAA9B,CAAhB;AACAD,IAAAA,cAAc,CAACS,aAAa,CAACZ,IAAD,EAAOS,OAAP,CAAd,CAAd;AACD,GAJD;;AAMA,QAAMD,OAAO,GAAGR,IAAI,IAAIA,IAAI,CAACU,GAAL,CAASG,IAAI,IAAIA,IAAI,CAACC,OAAtB,CAAxB;;AAEA,QAAMF,aAAa,GAAG,CAACZ,IAAD,EAAOS,OAAP,KAAmBT,IAAI,CAACS,OAAO,CAACM,OAAR,CAAgBC,IAAI,CAACC,GAAL,CAAS,GAAGR,OAAZ,CAAhB,CAAD,CAAJ,CAA4CK,OAArF;;AAEA,MAAI,CAACZ,WAAW,CAACE,MAAb,IAAuBJ,IAAI,CAACI,MAAhC,EAAwC;AACtCE,IAAAA,YAAY,CAACN,IAAD,CAAZ;AACD;;AAED,SAAOE,WAAW,CAACE,MAAZ,IAAsBJ,IAAtB,gBAA6B,QAAC,QAAD;AAAU,IAAA,WAAW,EAAEE,WAAvB;AAAoC,IAAA,KAAK,EAAEgB;AAA3C;AAAA;AAAA;AAAA;AAAA,UAA7B,gBAAoF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA3F;AACD,CAxBD;;GAAMrB,I;;KAAAA,I;AA0BN,eAAeA,IAAf","sourcesContent":["import HomeView from \"./home.view\";\nimport React, { useState } from 'react';\n\nconst Home = () => {\n  const response = require('../users.json'); //I tried httpsRequest but I got restricted by COrs policy.\n  const [data, setData] = useState([]);\n  const [animalsList, setAnimalsList] = useState([]);\n\n  if (response.length && !data.length) {\n    setdata(response);\n  }\n\n  const buildAnimals = (data) => {\n    const buildAnimalsLength = getData(data);\n    const lengths = buildAnimalsLength.map(a => a.length);\n    setAnimalsList(getAllAnimals(data, lengths));\n  }\n\n  const getData = data => data.map(user => user.animals);\n  \n  const getAllAnimals = (data, lengths) => data[lengths.indexOf(Math.max(...lengths))].animals;\n\n  if (!animalsList.length && data.length) {\n    buildAnimals(data);  \n  }\n\n  return animalsList.length && data ? <HomeView animalsList={animalsList} users={users} /> : <div>loading...</div>;\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}